name: Create and publish a Docker image

on:
  release:
    types: [ released ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build app
        run: |
          # just to check if it builds correctly
          GITHUB_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          GOOS=linux
          GOARCH=amd64
          CGO_ENABLED=0
          go build --trimpath -o .

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          GITHUB_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          VERSION=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')
          IMAGE_TAG=${VERSION}-${GITHUB_SHA}
          docker build -t img -f Dockerfile .
          # make IMAGE_NAME lowercase
          IMAGE_NAME=$(echo ${{ env.IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')
          
          major=$(echo $VERSION | cut -d. -f1)
          minor=$(echo $VERSION | cut -d. -f2)
          
          tag_major="$major"
          tag_minor="$major.$minor"
          
          docker tag img ${{ env.REGISTRY }}/${IMAGE_NAME}:${tag_major}
          docker tag img ${{ env.REGISTRY }}/${IMAGE_NAME}:${tag_minor}
          docker tag img ${{ env.REGISTRY }}/${IMAGE_NAME}:${VERSION}
          docker tag img ${{ env.REGISTRY }}/${IMAGE_NAME}:${IMAGE_TAG}
          docker tag img ${{ env.REGISTRY }}/${IMAGE_NAME}:${GITHUB_SHA}
          docker tag img ${{ env.REGISTRY }}/${IMAGE_NAME}:latest

      - name: Push Docker image
        run: |
          # make IMAGE_NAME lowercase
          IMAGE_NAME=$(echo ${{ env.IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')
          docker push -a ${{ env.REGISTRY }}/${IMAGE_NAME}
